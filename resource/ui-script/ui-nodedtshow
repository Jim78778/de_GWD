#!/bin/bash
port=$(jq '.outbounds[0].settings.vnext[0].port' /etc/vtrui/config.json)

result=$(echo $port | grep '^[0-9]\+$')
if [[ $result = "" ]]; then
port="443"
fi

domain=$(jq -r '.outbounds[0].settings.vnext[0].address' /etc/vtrui/config.json)
uuidnum=$(jq -r '.outbounds[0].settings.vnext[0].users[0].id' /etc/vtrui/config.json)
v2path=$(jq -r '.outbounds[0].streamSettings.wsSettings.path' /etc/vtrui/config.json)

jq -r '.dns.hosts | to_entries[] | [.key, .value] | @tsv' /etc/vtrui/config.json | sed '/127.0.0.1/d' > /etc/vtrui/hosts
cat /var/www/html/hostscustomize.txt >> /etc/vtrui/hosts

cat > /etc/vtrui/config.json << EOF
{
  "dns": {
    "tag": "flow",
    "hosts":{
      "localhost": "127.0.0.1"
    },
    "servers": [
      {"address":"127.0.0.1","port":5390},
      {"address":"127.0.0.1","port":5370,"domains":["domain:baidu.com"]},
      {"address":"127.0.0.1","port":5390,"domains":["domain:google.com"]},
      {"address":"127.0.0.1","port":5370,"domains":["geosite:cn"],"ip":["geoip:cn"]}
                     ]},
  "inbounds": [
    {
    "tag": "dnsin",
    "port": 53,
    "listen": "0.0.0.0",
    "protocol": "dokodemo-door",
    "settings": {"address": "0.0.0.0", "port": 53, "network": "udp"}
    },
    {
    "port": 9896,
    "listen": "127.0.0.1",
    "protocol": "dokodemo-door",
    "sniffing": {"enabled": true, "destOverride": ["http", "tls"]},
    "settings": {"network": "tcp,udp", "followRedirect": true},
    "streamSettings": { "sockopt": { "tproxy": "tproxy" } }
    }
  ],
  "outbounds": [
    {
      "tag": "proxy",
      "mux": {"enabled": true},
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "level": 1,
                "alterId": 4,
                "security": "auto"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000",
          "headers": {
            "Host": "xxxx.ooo"
          }
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    {
      "tag": "netflix",
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "level": 1,
                "alterId": 4,
                "security": "auto"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000",
          "headers": {
            "Host": "xxxx.ooo"
          }
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    {
      "tag": "diverttraffic",
      "protocol": "vmess",
      "settings": {
        "vnext": [
          {
            "address": "xxxx.ooo",
            "port": 443,
            "users": [
              {
                "id": "00000000-0000-0000-0000-000000000000",
                "level": 1,
                "alterId": 4,
                "security": "auto"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "ws",
        "wsSettings": {
          "path": "/000000",
          "headers": {
            "Host": "xxxx.ooo"
          }
        },
        "security": "tls",
        "tlsSettings": {
          "serverName": "xxxx.ooo",
          "allowInsecure": false
        },
        "sockopt": {
          "mark": 255
        }
      }
    },
    { "tag": "direct", "protocol": "freedom", "streamSettings": { "sockopt": { "mark": 255 } } },
    { "tag": "dnsout", "protocol": "dns" },
    { "tag": "block", "protocol": "blackhole" }
  ],
  "routing": {
    "domainStrategy": "IPOnDemand",
    "rules": [
      { "type": "field", "inboundTag": "dnsin", "outboundTag": "dnsout" },
      { "type": "field", "inboundTag": "flow", "outboundTag": "direct" },
      {
        "type": "field",
        "domain": [
          "domain:netflix.com",
          "domain:nflxvideo.net",
          "domain:nflxso.net",
          "domain:nflximg.net",
          "domain:netflix.net",
          "domain:netflixdnstest0.com",
          "domain:netflixdnstest1.com",
          "domain:netflixdnstest2.com",
          "domain:netflixdnstest3.com",
          "domain:netflixdnstest4.com",
          "domain:netflixdnstest5.com",
          "domain:netflixdnstest6.com",
          "domain:netflixdnstest7.com",
          "domain:netflixdnstest8.com",
          "domain:netflixdnstest9.com"
        ],
        "outboundTag": "netflix"
      },
      {
        "type": "field",
        "source": [ "10.0.0.1" ],
        "outboundTag": "diverttraffic"
      }
    ]
  }
}
EOF

jq --arg domain "$domain" '.outbounds[0].settings.vnext[0].address=$domain' /etc/vtrui/config.json |\
jq --argjson port "$port" '.outbounds[0].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[0].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[0].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[0].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[0].streamSettings.tlsSettings.serverName=$domain' |\
jq --arg domain "$domain" '.outbounds[1].settings.vnext[0].address=$domain' |\
jq --argjson port "$port" '.outbounds[1].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[1].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[1].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[1].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[1].streamSettings.tlsSettings.serverName=$domain' |\
jq --arg domain "$domain" '.outbounds[2].settings.vnext[0].address=$domain' |\
jq --argjson port "$port" '.outbounds[2].settings.vnext[0].port=$port' |\
jq --arg uuidnum "$uuidnum" '.outbounds[2].settings.vnext[0].users[0].id=$uuidnum' |\
jq --arg v2path "$v2path" '.outbounds[2].streamSettings.wsSettings.path=$v2path' |\
jq --arg domain "$domain" '.outbounds[2].streamSettings.wsSettings.headers.Host=$domain' |\
jq --arg domain "$domain" '.outbounds[2].streamSettings.tlsSettings.serverName=$domain' > /etc/vtrui/temp.json && mv -f /etc/vtrui/temp.json /etc/vtrui/config.json

cat /etc/vtrui/hosts | while read line 
do
  key=$(echo $line | awk '{print$1}')
  value=$(echo $line | awk '{print$2}')
jq --arg key $key --arg value $value '.dns.hosts += {($key): ($value)}' /etc/vtrui/config.json > /etc/vtrui/temp.json && mv -f /etc/vtrui/temp.json /etc/vtrui/config.json
done

rm -rf /etc/vtrui/hosts

systemctl restart vtrui

sed -i '/div id="shnodedt" style=/c\<div id="shnodedt" style="display:block">' /var/www/html/index.php
